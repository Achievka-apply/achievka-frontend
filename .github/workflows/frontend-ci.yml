name: CI/CD Frontend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Create .env for Vite
        run: |
          cat <<EOF > .env
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          EOF

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        run: |
          REPO=${{ secrets.DOCKERHUB_USER }}/achievka_frontend
          TAG=${{ github.sha }}
          docker build -f Dockerfile \
            -t $REPO:$TAG \
            -t $REPO:latest \
            .
          docker push $REPO:$TAG
          docker push $REPO:latest

      - name: Setup SSH for deployment
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          # Устанавливаем приватный ключ
          printf "%s\n" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Добавляем сервер в known_hosts, чтобы избежать ошибки верификации
          ssh-keyscan -H "${{ secrets.SERVER_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e
            cd ${{ secrets.PROJECT_PATH }}
            docker-compose pull frontend
            docker-compose stop frontend   || true
            docker-compose rm -f frontend  || true
            docker-compose up -d frontend
          EOF
